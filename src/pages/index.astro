---
//@ts-nocheck
import { getCollection } from "astro:content";

// Icons
import Heart from "../components/Heart.astro";
import Bolt from "../components/Bolt.astro";
import Twitter from "../components/Twitter.astro";

import Layout from "../layouts/Layout.astro";

interface Update {
    title: string;
    Content: Function;
    date: string;
    contentType: string;
    twitter: string;
}

interface Thanks {
    Content: Function;
    date: string;
    contentType: string;
    twitter: string;
}

const allUpdates = await Astro.glob("../content/updates/*.md");

const allThanks = await Astro.glob("../content/thanks/*.md");

const updates = allUpdates.map((update) => ({
    title: update.frontmatter.title,
    Content: update.Content,
    date: update.frontmatter.date,
    contentType: "update",
    twitter: update.frontmatter.twitter,
}));

const thanks = allThanks.map((thank) => ({
    title: thank.frontmatter.title,
    Content: thank.Content,
    date: thank.frontmatter.date,
    contentType: "thank",
    twitter: thank.frontmatter.twitter,
}));

function dateParser(dateString: string){
    let parts = dateString.split("/")

    let day = parts[0]
    let month = parts[1]
    let year = parseInt(parts[2], 10) + 2000

    return(year + month + day)

}

const allContent = [...thanks, ...updates];

const allContentSorted = allContent.sort(
    (a: Update | Thanks, b: Update | Thanks) => dateParser(a.date) - dateParser(b.date)
);

let startDate = allContentSorted[allContentSorted.length - 1].date

let uniqueDays = new Set()

for (let i = allContentSorted.length - 1; i > 0; i--) {
    uniqueDays.add(allContentSorted[i].date)
}

let dates = Array.from(uniqueDays)

let dateObj = {}

for (let i = 0; i < dates.length; i++) {
    Object.assign(dateObj, {[dates[i]]: []})
}

for (let i = 0; i < allContentSorted.length; i++) {
    for (let j = 0; j < dates.length; j++) {
        if(allContentSorted[i].date === dates[j]){
            dateObj[dates[j]].push(allContentSorted[i])
        }
    }
}

// console.log(Object.entries(dateObj));
---
<Layout title="TheCoppinger">
    <div class="card-dark">
        <h1>Updates</h1>
        <p>
            The latest happenings from <a
                href="https://twitch.tv/thecoppinger"
                target="_blank">the stream.</a
            >
        </p>
    </div>
        {
            Object.entries(dateObj).map((dateBundle) => {
                return (
                    <>
                        <h2>{dateBundle[0]}</h2> {/* Displaying dateBundle[0] */}
                        {dateBundle[1].map(({ Content, date, contentType, twitter }) => {
                            return contentType === "thank" ? (
                                <article>
                                    <Heart />
                                    <Content />
                                    {twitter ? (
                                        <a
                                            target="_blank"
                                            href={`https://twitter.com/${twitter}`}
                                            class="flex gap-2 items-center"
                                        >
                                            <Twitter /> {twitter}
                                        </a>
                                    ) : (
                                        ""
                                    )}
                                </article>
                            ) : (
                                <article>
                                    <Bolt />
                                    <Content />
                                    {twitter ? (
                                        <a
                                            target="_blank"
                                            href={`https://twitter.com/${twitter}`}
                                            class="flex gap-2 items-center"
                                        >
                                            <Twitter />
                                        </a>
                                    ) : (
                                        ""
                                    )}
                                </article>
                            );
                        })}
                    </>
                );
            })
        }
</Layout>